-- 1. 
-- A.
select lpad('-',2*(level-1),'|-') || t.owner||'.'||t.type_name||' (FINAL:'||t.final||
', INSTANTIABLE:'||t.instantiable||', ATTRIBUTES:'||t.attributes||', METHODS:'||t.methods||')'
from all_types t
start with t.type_name = 'ST_GEOMETRY'
connect by prior t.type_name = t.supertype_name and prior t.owner = t.owner;

-- B.
select distinct m.method_name
from all_type_methods m
where m.type_name like 'ST_POLYGON'
and m.owner = 'MDSYS'
order by 1;

-- C.
CREATE TABLE MYST_MAJOR_CITIES (
    FIPS_CNTRY VARCHAR2(2),
    CITY_NAME VARCHAR(40),
    STGEOM ST_POINT 
);

-- D.
insert into MYST_MAJOR_CITIES
select C.FIPS_CNTRY, C.CITY_NAME,
TREAT(ST_POINT.FROM_SDO_GEOM(C.GEOM) AS ST_POINT) STGEOM
from MAJOR_CITIES C;


-- 2.
-- A.
INSERT INTO MYST_MAJOR_CITIES
VALUES ('PL', 'Szczyrk', TREAT(ST_POINT.FROM_WKT('POINT(19.036107 49.718655)') AS ST_POINT));

SELECT * FROM MYST_MAJOR_CITIES;

-- B.
select name, ST_POINT.FROM_SDO_GEOM(geom).GET_WKT() WKT
from RIVERS;

-- C.
SELECT SDO_UTIL.TO_GMLGEOMETRY(ST_POINT.GET_SDO_GEOM(STGEOM)) AS GML 
FROM MYST_MAJOR_CITIES 
WHERE CITY_NAME = 'Szczyrk';

-- 3.
-- A.
CREATE TABLE MYST_COUNTRY_BOUNDARIES (
    FIPS_CNTRY VARCHAR2(2),
    CNTRY_NAME VARCHAR2(40),
    STGEOM ST_MULTIPOLYGON
);

-- B.
insert into MYST_COUNTRY_BOUNDARIES
select B.FIPS_CNTRY, B.CNTRY_NAME, ST_MULTIPOLYGON(B.GEOM)
from COUNTRY_BOUNDARIES B;

SELECT * FROM MYST_COUNTRY_BOUNDARIES;

-- C.
select B.STGEOM.ST_GEOMETRYTYPE() TYP_OBIEKTU, COUNT(*) ILE
from MYST_COUNTRY_BOUNDARIES B
GROUP BY B.STGEOM.ST_GEOMETRYTYPE();

-- D.
SELECT B.STGEOM.ST_ISSIMPLE()
FROM MYST_COUNTRY_BOUNDARIES B;


-- 4.
-- A.
select B.CNTRY_NAME, count(*)
from MYST_COUNTRY_BOUNDARIES B,
 MYST_MAJOR_CITIES C
where C.STGEOM.ST_WITHIN(B.STGEOM) = 1
and city_name != 'Szczyrk'
group by B.CNTRY_NAME;

-- B.
select A.CNTRY_NAME a_name, B.CNTRY_NAME b_name
from MYST_COUNTRY_BOUNDARIES a, myst_country_boundaries b
where a.STGEOM.ST_TOUCHES(b.STGEOM) = 1 and b.cntry_name = 'Czech Republic';

-- C.
select distinct B.CNTRY_NAME, R.name
from MYST_COUNTRY_BOUNDARIES B, RIVERS R
where ST_LINESTRING(R.GEOM).ST_INTERSECTS(B.STGEOM) = 1 and B.CNTRY_NAME = 'Czech Republic';
    
-- D.
SELECT a.stgeom.st_union(b.stgeom) powierzchnia
FROM myst_country_boundaries a, myst_country_boundaries b
WHERE a.cntry_name = 'Slovakia' AND b.cntry_name = 'Czech Republic';
-- niepowodzenie
    
-- E.
SELECT A.STGEOM AS OBIEKT, A.STGEOM.ST_DIFFERENCE(ST_GEOMETRY(B.GEOM)).ST_GEOMETRYTYPE() AS WEGRY_BEZ
FROM MYST_COUNTRY_BOUNDARIES A, WATER_BODIES B
WHERE A.CNTRY_NAME = 'Hungary' AND B.NAME = 'Balaton';


-- 5
-- A.
EXPLAIN PLAN FOR
SELECT A.CNTRY_NAME AS A_NAME, COUNT(*)
FROM MYST_COUNTRY_BOUNDARIES A, MYST_MAJOR_CITIES B
WHERE SDO_WITHIN_DISTANCE(B.STGEOM, A.STGEOM, 'distance=100 unit=km') = 'TRUE' AND A.CNTRY_NAME = 'Poland'
GROUP BY A.CNTRY_NAME;

SELECT PLAN_TABLE_OUTPUT FROM TABLE(DBMS_XPLAN.DISPLAY);

-- B.
INSERT INTO USER_SDO_GEOM_METADATA
SELECT 'MYST_MAJOR_CITIES', 'STGEOM', T.DIMINFO, T.SRID
FROM ALL_SDO_GEOM_METADATA T
WHERE T.TABLE_NAME = 'MAJOR_CITIES';
 
-- C.
create index MYST_MAJOR_CITIES_IDX on MYST_MAJOR_CITIES(STGEOM)
indextype IS MDSYS.SPATIAL_INDEX_V2;

DROP INDEX MYST_MAJOR_CITIES_IDX;

-- D.
EXPLAIN PLAN FOR
SELECT A.CNTRY_NAME AS A_NAME, COUNT(*)
FROM MYST_COUNTRY_BOUNDARIES A, MYST_MAJOR_CITIES B
WHERE SDO_WITHIN_DISTANCE(B.STGEOM, A.STGEOM, 'distance=100 unit=km') = 'TRUE' AND A.CNTRY_NAME = 'Poland'
GROUP BY A.CNTRY_NAME;

SELECT PLAN_TABLE_OUTPUT FROM TABLE(DBMS_XPLAN.DISPLAY);

